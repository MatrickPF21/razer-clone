// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Product {
  id                  String  @id
  name                String
  isRgb               Boolean
  summary             String? @db.VarChar(300)
  promoliner          String? @db.VarChar(300)
  specs               String  @db.VarChar(500)
  image               String  @db.VarChar(1000)
  url                 String
  mainPageSectionName String?

  categories CategoryInProduct[]
  images     Image[]
  price      Price?
  badge      Badge?              @relation(fields: [badgeId], references: [id], onDelete: Cascade)
  badgeId    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([badgeId])
  @@map("product")
}

model CategoryInProduct {
  productId  String
  categoryId String

  product  Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([productId, categoryId])
  @@index([productId])
  @@index([categoryId])
  @@map("category_in_product")
}

model Category {
  id   String  @id
  name String
  url  String
  slug String?

  products CategoryInProduct[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("category")
}

model Price {
  id       String @id @default(uuid())
  amount   Int // in cents
  currency String
  discount Int?

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String  @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("price")
}

model Badge {
  id          String     @id @default(uuid())
  name        String
  displayText String
  color       BadgeColor

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("badge")
}

enum BadgeColor {
  YELLOW
  ORANGE
}

model Image {
  altText      String
  galleryIndex Int         @default(0)
  url          String      @db.VarChar(1000)
  imageType    ImageType
  format       ImageFormat

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([productId, imageType, format, galleryIndex])
  @@index([productId])
  @@map("image")
}

enum ImageType {
  PRIMARY
  GALLERY
}

enum ImageFormat {
  superZoom
  zoom
  zoomMobile
  zoomTablet
  product
  thumbnail
  cartIcon
}
